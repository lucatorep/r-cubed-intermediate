---
search: false
# Relative to main project
bibliography: includes/references.bib
csl: includes/vancouver.csl
---

# What next? Reproducibility in research

## First thing: *True* reproducibility is basically impossible {.center}

## Better: "reproducibility at dissemination / archiving" or "inspectability" [@Gil2016] {.center}

::: notes
Ask if learners can put their laptop lids down, so you have their full
attention.

True reproducibility means being able to re-create the results on *any*
computer at any point in the near future. But with different software
versions, unmaintained or difficult to install dependencies, constant
updates, differences between operating systems, and data sharing (which
is a bit of a joke in health research). Reproducibility quickly becomes
impossible. Hence why focusing on being reproducible at the time of
publication or at the very least focus on ensuring your data analysis is
"inspectable", meaning that someone can come and read your code and
understand the logic of what you are doing, even if they can't directly
reproduce the results.
:::

# Code sharing is abysmal across health sciences [@Considine2017a, @Rauh2019, @Evans2019, @Rauh2019a, @Hughes2019, @Peng2006a, @Seibold2021]

## How can we check reproducibility if no code is given? {.center}

Possible role models as research groups: [Jeff
Leek](http://jtleek.com/codedata.html) and [Ben
Marwick](https://faculty.washington.edu/bmarwick/#publications).

::: notes
But that doesn't even matter, because we can't have reproducibility if
no one shares their code!

And this is no joke. Getting data on this is difficult, but the research
that has been done shows that almost no one is sharing their code. The
estimates range between fields in health science from zero to maybe five
percent of published studies. The only area that is doing pretty well is
bioinformatics, at about 60% of published studies.

We as researchers try to find our niche, make our own space in the
research world. Sometimes its a real struggle to find that niche.. but
guys! No one is doing this, no one is sharing their code! You start
doing the simplest thing of sharing your code and you will be one of
very very few people who do. And this isn't a niche, this is a gaping
hole in our modern scientific process. A huge hole.
:::

# Not going to lie, there are very strong...

## Institutional barriers

. . .

-   Lack of adequate awareness, support, infrastructure, training

. . .

-   Research culture values publications over all else

. . .

-   More traditional academics don't understand or resist change

. . .

-   'Business as usual' is easier

::: notes
You will encounter a lot of resistance, a lot of barriers and hardship.

At the institutional level, there is no real awareness of this, no
support or infrastructure. You're basically doing this on your own.
Which probably isn't that uncommon anyway.

Research culture and incentives pretty much only care about publishing
journal articles. Creating software tools, meh. Making teaching
materials to help other researchers, meh. Communicating your science to
the public, meh. Doing actual science that might take years and not lead
to any "hard papers", meh.

We have a large portion of traditional academics who have benefitted
from and succeeded in this system and are invested in continuing it.
Probably because they don't understand the scope of the problem or just
resist change.

We have a system that favours each individual person repeating the same
mistakes that others make because the system doesn't allow for us to
take the time to create tools and infrastructure that helps ourselves
and others out.

Because business as usual is the easiest way in the short term. Our
current scientific culture is just not prepared for this, for the rising
modern analytic and computational era.
:::

## ...and personal barriers

-   Fear of:
    -   Fear of being scooped or ideas being stolen
    -   Not being credited for ideas
    -   Errors and public humiliation
    -   Risk to reputation

. . .

-   Need to constantly stay updated

-   Finding better opportunities outside of academia

::: aside
More detail on barriers here: [Tennant
(2017)](https://doi.org/10.6084/m9.figshare.5383711.v1)
:::

::: notes
And there aren't just institutional barriers. We as researchers have
fears of being scooped, of embarrassment and humiliation for your
methods being *gasp* wrong. Which is actually just part of science.

You also have to constantly stay updated, and that can be tiring.

And the last barrier, which may actually be a benefit, is that one
reason you don't see a lot of researchers sharing their code or being
more reproducible is.. they end up getting picked up by industry and
paid really well or decide to leave academia for the reasons I
mentioned.

Just as an example, I found a Norwegian group who had a really
inefficient workflow and decided to re-build their workflow to make use
of programming, to be reproducible, to have a pipeline. I looked up the
lead author as well as several other of the co-authors and guess what...
many of them now work in really great companies as data scientists or
software engineers, probably making a lot of money and having
potentially a less stressful life.
:::

# So... what you can do right now?

## Easiest thing: Start sharing your code {.center}

::: notes
If you do nothing else: share your code.

If its ugly, that's fine! The point is you start and that you get more
comfortable doing it until it becomes second nature to share and in the
process, your code gets better because you know someone might look at
your code.
:::

## How do you share?

-   [GitHub](https://github.com/)

-   [Zenodo](https://zenodo.org/)

-   [figshare](https://figshare.com/)

-   [Open Science Framework](https://osf.io/)

::: notes
How do you share? Put your code up on any of these sites. I prefer a
combination of GitHub and Zenodo, but the others are also quite good as
well.

When do you share? I say right away. As soon as I have an analysis
project, my code is up on either GitHub or GitLab (another service like
GitHub). Alternatively, you can upload it when you also finish your
manuscript.
:::

## What else can you do?

-   Find or start building a community of people using R

-   Start doing code reviews within your group

-   Start new projects or collaborations by:

    -   Using R, Quarto / R Markdown, Git, and GitHub
    -   Aiming to share and be reproducible

::: aside
Code reviews: Reviewing each others code like you would review a
manuscript.
:::

::: notes
The other things you can start doing is find or start building a
community of people who also use R or are doing reproducibility or any
other computational work. Use them as support and help and also give
back too.

Start doing code reviews in your research group. Code review would be
where you look over each others code, check that it works, check that it
makes sense, that it's readable and understandable. The nice thing with
doing code reviews is that it dispels the mystery around code and about
criticising it and trying to improve it. We review manuscripts, why not
code? I personally though have had a really hard time getting groups
I've been part of now and in the past to do this, but baby steps.
:::

## And teaching others is a great way to learn :wink: {.center}

::: notes
Lastly.. you can teach. Teach others. Use these teaching materials. Or
get involved with this course next year. Or now. Actually, several
participants from the beginner course are or will soon be helping to
improve the material for next year. There are also so many other things
you can get involved in, aside from this course. Let me know if you're
interested!
:::

# References
